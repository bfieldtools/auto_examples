.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_gradient_example.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_auto_examples_gradient_example.py:


Gradient computation example
============================

Minimal example visualizing the gradient of a scalar function on a mesh


.. code-block:: default


    import numpy as np
    from mayavi import mlab
    import trimesh

    from bfieldtools.viz import plot_data_on_vertices
    from bfieldtools.mesh_calculus import gradient
    import pkg_resources

    # Load simple plane mesh that is centered on the origin
    file_obj = file_obj = pkg_resources.resource_filename(
        "bfieldtools", "example_meshes/10x10_plane.obj"
    )
    planemesh = trimesh.load(file_obj, process=False)

    # Generate a simple scalar function
    r = np.linalg.norm(planemesh.vertices, axis=1)
    vals = np.exp(-0.5 * (r / r.max()))

    # triangle centers for plotting
    tri_centers = planemesh.vertices[planemesh.faces].mean(axis=1).T
    tri_centers[1] += 0.1








Calculate the gradient (e.g., flow from potential)


.. code-block:: default

    g = gradient(vals, planemesh, rotated=False)

    # Plot function and its gradient as arrows

    scene = mlab.figure(None, bgcolor=(1, 1, 1), fgcolor=(0.5, 0.5, 0.5), size=(800, 800))

    plot_data_on_vertices(planemesh, vals, ncolors=15, figure=scene)
    vecs = mlab.quiver3d(*tri_centers, *g, color=(1, 1, 1), mode="arrow", scale_factor=5)
    vecs.glyph.glyph_source.glyph_position = "center"




.. image:: /auto_examples/images/sphx_glr_gradient_example_001.png
    :class: sphx-glr-single-img





The same but rotated (e.g. current density from a stream function)


.. code-block:: default

    g = gradient(vals, planemesh, rotated=True)

    # Plot function and its gradient as arrows
    scene = mlab.figure(None, bgcolor=(1, 1, 1), fgcolor=(0.5, 0.5, 0.5), size=(800, 800))

    plot_data_on_vertices(planemesh, vals, ncolors=15, figure=scene)
    vecs = mlab.quiver3d(*tri_centers, *g, color=(1, 1, 1), mode="arrow", scale_factor=5)
    vecs.glyph.glyph_source.glyph_position = "center"



.. image:: /auto_examples/images/sphx_glr_gradient_example_002.png
    :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.321 seconds)

**Estimated memory usage:**  115 MB


.. _sphx_glr_download_auto_examples_gradient_example.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: gradient_example.py <gradient_example.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: gradient_example.ipynb <gradient_example.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
