.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_line_conductor_example.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_auto_examples_line_conductor_example.py:


Mutual inductance of wire loops
===============================

In this example, we demonstrate how to compute the mutual inductance between two sets of polyline wire loops.


.. code-block:: default



    from bfieldtools.line_conductor import LineConductor
    from bfieldtools.mesh_conductor import StreamFunction
    from bfieldtools.suhtools import SuhBasis
    from bfieldtools.utils import load_example_mesh

    import numpy as np








We create a set of wire loops by picking a single (arbitrary) surface-harmonic mode
from a plane mesh.  Finally, we discretize 


.. code-block:: default


    mesh = load_example_mesh("10x10_plane")

    sb = SuhBasis(mesh, 10) # Construct surface-harmonics basis
    sf = StreamFunction(sb.basis[:, 1], sb.mesh_conductor) #Turn single mode into a stream function
    c = LineConductor(mesh=mesh, scalars=sf) # Discretize the stream function into wire loops


    # Plot loops for testing
    fig = c.plot_loops(origin=np.array([0,-100, 0]))





.. image:: /auto_examples/images/sphx_glr_line_conductor_example_001.png
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Calculating surface harmonics expansion...
    Computing the laplacian matrix...
    Computing the mass matrix...




Now, we create a shifted copy of the wire loops, and the calculate the 
mutual_inductance between two sets of line conductors


.. code-block:: default



    mesh2 = mesh.copy()
    mesh2.vertices[:, 1] += 1
    c2 = LineConductor(mesh=mesh2, scalars=sf)
    c2.plot_loops(figure=fig, origin=np.array([0,-100, 0]))

    Mself = c.line_mutual_inductance(c, separate_loops=True, radius=1e-2)
    M2 = c.line_mutual_inductance(c2, separate_loops=True)



.. rst-class:: sphx-glr-script-out


.. code-block:: pytb

    Traceback (most recent call last):
      File "/home/rzetter/miniconda3/lib/python3.7/site-packages/sphinx_gallery/gen_rst.py", line 460, in _memory_usage
        out = func()
      File "/home/rzetter/miniconda3/lib/python3.7/site-packages/sphinx_gallery/gen_rst.py", line 442, in __call__
        exec(self.code, self.fake_main.__dict__)
      File "/home/rzetter/Documents/bfieldtools/examples/line_conductor_example.py", line 40, in <module>
        c2.plot_loops(figure=fig, origin=np.array([0,-100, 0]))
      File "/home/rzetter/Documents/bfieldtools/bfieldtools/line_conductor.py", line 101, in plot_loops
        [e.discrete(self.vertices) for e in self.entities], **kwargs
      File "/home/rzetter/Documents/bfieldtools/bfieldtools/viz.py", line 187, in plot_3d_current_loops
        figure.scene.isometric_view()
    AttributeError: 'NoneType' object has no attribute 'isometric_view'




Now, we plot the inductance matrices


.. code-block:: default


    import matplotlib.pyplot as plt

    ff, ax = plt.subplots(1, 2, figsize=(12, 8))
    plt.sca(ax[0])
    plt.matshow(Mself, fignum=0)
    plt.title('Inductance matrix of the first set of wire loops')
    plt.sca(ax[1])
    plt.matshow(M2, fignum=0)
    plt.title('Mutual inductance matrix between the sets of wire loops')

    ff.tight_layout()

.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.951 seconds)


.. _sphx_glr_download_auto_examples_line_conductor_example.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: line_conductor_example.py <line_conductor_example.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: line_conductor_example.ipynb <line_conductor_example.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
